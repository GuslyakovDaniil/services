type Query {
    categories: [Category]
    category(id: ID!): Category
    products: [Product]
    product(id: ID!): Product
    users: [User]
    user(id: ID!): User
    orders: [Order]
    order(id: ID!): Order
}

type Mutation {
    createCategory(category: CategoryInput!): Category
    updateCategory(id: ID!, category: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean
    createProduct(product: ProductInput!): Product
    updateProduct(id: ID!, product: ProductInput!): Product
    deleteProduct(id: ID!): Boolean
    createUser(user: UserInput!): User
    updateUser(id: ID!, user: UserInput!): User
    deleteUser(id: ID!): Boolean
    createOrder(order: OrderInput!): Order
    updateOrder(id: ID!, order: OrderInput!): Order
    deleteOrder(id: ID!): Boolean

}

type Category {
    id: ID!
    name: String
}

input CategoryInput {
    name: String!
}

type Product {
    id: ID!
    name: String
    price: Float
}

input ProductInput {
    name: String!
    price: Float!
}

type User {
    id: ID!
    firstName: String
    lastName: String
    email: String
    phone: String
}

input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    phone: String!
}
type Order {
    id: ID!
    user: User
    products: [Product]
    orderDate: String
}
input OrderInput {
    userId: ID!
    productIds: [ID!]!
    orderDate: String!
}